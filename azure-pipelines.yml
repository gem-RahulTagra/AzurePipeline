trigger:
- main  # Set the branch to trigger the pipeline on

pool:
  vmImage: 'windows-latest'  # Use a Windows agent

steps:

- task: JavaToolInstaller@0
  inputs:
    versionSpec: '11'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'

- powershell: |
    $configFilePath = "$(System.DefaultWorkingDirectory)/config.properties"

    # Define key-value pairs to assign values to existing keys
    $keyValuePairs = @{
        "username" = "$(username)"
        "password" = "$(password)"
    }

    # Read existing content of the config.properties file
    $configContent = Get-Content -Path $configFilePath

    # Update existing keys with new values
    foreach ($key in $keyValuePairs.Keys) {
        $configContent = $configContent -replace "^$key=.*", "$key=$($keyValuePairs[$key])"
    }

    # Write updated content back to the config.properties file
    $configContent | Set-Content -Path $configFilePath -Force

  displayName: 'Modify config.properties file'

- script: 'mvn clean test -Dcucumber.filter.tags=$(CUCUMBER_TAGS)'  # Command to build and run your Selenium tests using Maven
  displayName: 'Run Selenium Tests'

- script: 'mvn io.qameta.allure:allure-maven:2.10.0:report'  # Command to generate Allure reports
  displayName: 'Generate Allure Reports'

- task: PublishAllureReport@1
  displayName: 'Publish Allure Report'
  inputs:
    reportDir: '$(Build.SourcesDirectory)/target/site/AllureReports/allure-maven-plugin'
# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: '$(Build.SourcesDirectory)/target/site'  # Path to Allure results folder
#     artifactName: 'AllureReports'
#   displayName: 'Publish Allure Reports'
